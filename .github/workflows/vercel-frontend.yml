name: Deploy Lit (Vite) to Vercel

on:
  push:
    branches: [ main ]
  pull_request:

# Avoid parallel deploys for the same branch/PR
concurrency:
  group: vercel-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    # If your Lit app lives in a subfolder (monorepo), set it here:
    # change to '.' if the project is in the repo root
    defaults:
      run:
        working-directory: apps/frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: apps/frontend/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Build (Vite)
        run: npm run build

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      # Pull your Vercel project/env config (binds the build to your Vercel Project)
      - name: Vercel pull
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        run: |
          vercel pull --yes \
            --environment $([ "${{ github.ref }}" = "refs/heads/main" ] && echo "production" || echo "preview") \
            --token "$VERCEL_TOKEN" \
            ${VERCEL_PROJECT_ID:+--project $VERCEL_PROJECT_ID} \
            ${VERCEL_ORG_ID:+--scope $VERCEL_ORG_ID}

      # Build on CI to produce a .vercel/output for deployment
      - name: Vercel build
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            vercel build --prod --token "$VERCEL_TOKEN"
          else
            vercel build --token "$VERCEL_TOKEN"
          fi

      # Deploy the prebuilt output (Preview for PRs/branches, Prod for main)
      - name: Deploy to Vercel
        id: deploy
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            vercel deploy --prebuilt --prod --token "$VERCEL_TOKEN" > deployment_url.txt
          else
            vercel deploy --prebuilt --token "$VERCEL_TOKEN" > deployment_url.txt
          fi
          echo "url=$(cat deployment_url.txt | tail -n1)" >> "$GITHUB_OUTPUT"

      - name: Output deployment URL
        run: echo "Vercel URL => ${{ steps.deploy.outputs.url }}"
